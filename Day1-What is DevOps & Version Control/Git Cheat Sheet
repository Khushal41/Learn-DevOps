# Git Cheat Sheet

## 🔑 Basic Git Commands

* `git init` → Initialize a new Git repository in the current directory.
* `git clone <repo_url>` → Clone a remote repository locally.
* `git status` → Check the status of your working directory (changes, staged files, etc.).
* `git add <file>` → Add file(s) to the staging area.
* `git add .` → Add all modified/untracked files to the staging area.
* `git commit -m "message"` → Commit staged changes with a message.
* `git log` → Show commit history.
* `git diff` → Show changes between commits or working directory and staging area.

## 🌍 Remote Repository Commands

* `git remote -v` → Show configured remote repositories.
* `git remote add origin <repo_url>` → Link local repo to remote repo.
* `git push origin main` → Push changes to remote branch.
* `git pull origin main` → Fetch and merge changes from remote branch.
* `git fetch` → Download changes but don’t merge them yet.

## 🌿 Branching & Merging

* `git branch` → List branches.
* `git branch <branch_name>` → Create a new branch.
* `git checkout <branch_name>` → Switch to another branch.
* `git switch <branch_name>` → Alternate way to switch branches.
* `git checkout -b <branch_name>` → Create and switch to new branch.
* `git merge <branch_name>` → Merge branch into current branch.
* `git branch -d <branch_name>` → Delete branch.

## 🔄 Undoing & Resetting

* `git reset <file>` → Unstage a file.
* `git reset --hard <commit_id>` → Reset repo to a specific commit (discard changes).
* `git revert <commit_id>` → Create a new commit that undoes a specific commit.
* `git checkout -- <file>` → Discard changes in a file.

## 🎯 Other Useful Commands

* `git stash` → Save changes temporarily without committing.
* `git stash pop` → Reapply the stashed changes.
* `git tag <tag_name>` → Create a tag (useful for releases).
* `git show <commit_id>` → Show details of a commit.
* `git blame <file>` → Show who made changes line by line.
